{"ast":null,"code":"var _jsxFileName = \"/Users/aa.ron/Documents/GitHub/sorting-visualiser/src/SortingVisualiser/SortingVisualiser.jsx\";\nimport React from 'react';\nimport './SortingVisualiser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class SortingVisualiser extends React.Compnent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n  componenetDidMount() {\n    this.resetArray();\n  }\n\n  // this is used during generate new array button\n  resetArray() {\n    const array = [];\n    const noElements = 100; // no of elements in an array\n    const MAXVALUE = 10000; // max value of random integer \n\n    for (let i = 0; i < noElements; i++) {\n      array.push(getRandomInt(MAXVALUE));\n    }\n    this.setState({\n      array\n    });\n  }\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: arrray.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-bar\",\n        children: value\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this))\n    }, void 0, false);\n  }\n}\n\n// gets random integer for resetting array\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SortingVisualiser","Compnent","constructor","props","state","array","componenetDidMount","resetArray","noElements","MAXVALUE","i","push","getRandomInt","setState","render","children","arrray","map","value","idx","className","fileName","_jsxFileName","lineNumber","columnNumber","max","Math","floor","random"],"sources":["/Users/aa.ron/Documents/GitHub/sorting-visualiser/src/SortingVisualiser/SortingVisualiser.jsx"],"sourcesContent":["import React from 'react';\nimport './SortingVisualiser.css';\n\nexport default class SortingVisualiser extends React.Compnent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n    componenetDidMount() {\n        this.resetArray();\n    }\n\n    // this is used during generate new array button\n    resetArray() {\n        const array = [];\n        const noElements = 100 // no of elements in an array\n        const MAXVALUE = 10000 // max value of random integer \n        \n        for (let i = 0; i < noElements; i++) {\n            array.push(getRandomInt(MAXVALUE));\n        }\n\n        this.setState({array});\n    }\n\n    render() {\n        const {array} = this.state;\n\n        return (\n            <>\n            {arrray.map((value, idx) => (\n                <div className=\"array-bar\" key={idx}>\n                {value}\n                </div>\n            ))}\n            </>\n            );\n        }\n}\n\n// gets random integer for resetting array\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,MAAMC,iBAAiB,SAASL,KAAK,CAACM,QAAQ,CAAC;EAC1DC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE;IACX,CAAC;EACL;EAEAC,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACC,UAAU,EAAE;EACrB;;EAEA;EACAA,UAAUA,CAAA,EAAG;IACT,MAAMF,KAAK,GAAG,EAAE;IAChB,MAAMG,UAAU,GAAG,GAAG,EAAC;IACvB,MAAMC,QAAQ,GAAG,KAAK,EAAC;;IAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,EAAEE,CAAC,EAAE,EAAE;MACjCL,KAAK,CAACM,IAAI,CAACC,YAAY,CAACH,QAAQ,CAAC,CAAC;IACtC;IAEA,IAAI,CAACI,QAAQ,CAAC;MAACR;IAAK,CAAC,CAAC;EAC1B;EAEAS,MAAMA,CAAA,EAAG;IACL,MAAM;MAACT;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAE1B,oBACIP,OAAA,CAAAE,SAAA;MAAAgB,QAAA,EACCC,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACnBtB,OAAA;QAAKuB,SAAS,EAAC,WAAW;QAAAL,QAAA,EACzBG;MAAK,GAD0BC,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGtC;IAAC,iBACC;EAEP;AACR;;AAEA;AACA,SAASZ,YAAYA,CAACa,GAAG,EAAE;EACvB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGH,GAAG,CAAC;AAC1C;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}